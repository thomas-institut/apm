{"version":3,"sources":["webpack:///./FmtText/FmtTextFactory.js","webpack:///./FmtText/FmtTextToken.js","webpack:///./FmtText/FmtTextTokenFactory.js","webpack:///./FmtText/FmtTextTokenType.js","webpack:///./FmtText/FontStyle.js","webpack:///./FmtText/FontWeight.js","webpack:///./FmtText/VerticalAlign.js","webpack:///./toolbox/ArrayUtil.js","webpack:///./toolbox/FunctionUtil.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../test/js/modules-to-test.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,aAAa,oBAAoB;AAC1C;;;AAG2D;AACd;;AAEtC;;AAEP;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,gFAA8B;AACrD;AACA;AACA,qBAAqB,iFAA+B;AACpD,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,mBAAmB,gFAA8B;AACjD;AACA;AACA;;AAEA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,cAAc,qFAAmC;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,iFAA+B;AAC5C;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGsD;AACd;AACE;AACM;;AAEzC;;AAEA;;AAEP,sBAAsB,mDAAqB;AAC3C;AACA;AACA,WAAW,mDAAqB;AAChC;AACA,yBAAyB,8CAAgB;AACzC,0BAA0B,+CAAiB;AAC3C,6BAA6B,oDAAsB;AACnD;;AAEA,WAAW,mDAAqB;AAChC;AACA;;AAEA;AACA,4EAA4E,KAAK;AACjF,oBAAoB,oDAAsB;AAC1C;AACA;;AAEA;AACA,yBAAyB,mDAAqB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,8CAAgB;AACrC;AACA;;AAEA;AACA,qBAAqB,8CAAgB;AACrC;AACA;;AAEA;AACA,sBAAsB,6CAAe;AACrC;AACA;;AAEA;AACA,sBAAsB,+CAAiB;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,uDAAyB;AAClD;AACA;;AAEA;AACA,yBAAyB,qDAAuB;AAChD;AACA;;AAEA;AACA;AACA;;AAEA,C;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6C;AACS;;AAE/C;;AAEP;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA,gBAAgB,uDAAY,CAAC,mDAAqB;AAClD;;AAEA;AACA,eAAe,uDAAY,CAAC,mDAAqB;AACjD;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,sBAAsB,uDAAY;AAClC;AACA;AACA,WAAW,mDAAqB;AAChC;AACA;AACA;AACA;AACA;;AAEA,WAAW,mDAAqB;AAChC;AACA;;AAEA;AACA,4EAA4E,KAAK;AACjF,uBAAuB,oDAAsB;AAC7C;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,8BAA8B,uDAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAqB;AAChC,2BAA2B,uDAAY,CAAC,mDAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,WAAW,mDAAqB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA,C;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA,mB;;;;;;;;;;;;;;;;;AClBA;AACA,uB;;;;;;;;;;;;;;;ACHP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACA,mB;;;;;;;;;;;;;;;;ACnBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA,2B;;;;;;;;;;;;;;;;;;;;;;;ACpBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;;AAEO,6EAA6E,eAAe;AACnG;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;AAGO;AACP,kCAAkC,qBAAqB;AACvD;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,IAAI;AACf;AACO;AACP;AACA;AACA;AACA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;ACzGO;AACA,8BAA8B;;AAE9B;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA,C;;;;;;UCzBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACLuD;AACvD,mBAAmB,kDAAS;;AAE5B,CAA6D;AAC7D,sBAAsB,qDAAY;;AAElC,CAA0E;AAC1E,6BAA6B,gFAAmB;;AAEhD,CAA4D;AAC5D,sBAAsB,kEAAY;;AAElC,CAAqE;AACrE,0BAA0B,yDAAgB;;AAE1C,CAA8D;AAC9D,wBAAwB,sE","file":"../../test/js/JasmineTests.bundle.js","sourcesContent":["/*\n *  Copyright (C) 2021 Universität zu Köln\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\n\n\n/*\n\nFmtText is not a class per se but simply an array of FormattedTextToken\n\nAny function that takes FormattedText as input could also accept shortcut representations of basic text that can\neasily be transformed into a fully specified array of FormattedTextToken. For example: a simple string including\nspaces, an array mixing FormattedTextToken objects and strings.\n\n  Also, it is not necessary to provide any attribute that can have a sensible default. So, a glue token can\nbe just { type: glue }  and a text token { text: 'someString' }\n */\n\n\nimport { FmtTextTokenFactory } from './FmtTextTokenFactory'\nimport { FmtTextToken } from './FmtTextToken'\n\nexport class FmtTextFactory {\n\n  /**\n   * Creates a FmtText array from a string\n   * @param {string} theString\n   * @returns { FmtTextToken[] }\n   */\n  static fromString(theString) {\n\n    let fmtText = []\n    let currentWord = ''\n\n    Array.from(sanitizeString(theString)).forEach( (char) => {\n      if (char === ' ') {\n        if (currentWord !== '') {\n          fmtText.push(FmtTextTokenFactory.normalText(currentWord))\n          currentWord = ''\n        }\n        fmtText.push(FmtTextTokenFactory.normalSpace())\n      } else {\n        currentWord += char\n      }\n    })\n    if (currentWord !== '') {\n      fmtText.push(FmtTextTokenFactory.normalText(currentWord))\n    }\n    return fmtText\n  }\n\n  /**\n   *\n   * @param {*} theThing\n   * @returns {FmtTextToken[]}\n   */\n  static fromAnything(theThing) {\n\n    if (Array.isArray(theThing)) {\n      let fmtText = []\n      theThing.forEach( (arrayElement) => {\n        fmtText = fmtText.concat( this.fromAnything(arrayElement))\n      })\n      return fmtText\n    }\n    if (typeof theThing === 'object') {\n      return [FmtTextTokenFactory.buildFromObject(theThing)]\n    }\n    if (typeof theThing === 'string') {\n      return this.fromString(theThing)\n    }\n\n    if (theThing.toString() !== undefined) {\n      return FmtTextFactory.fromString(theThing.toString())\n    }\n    console.warn(`Cannot create FmtText from given value`)\n    console.log(theThing)\n\n    return this.empty()\n  }\n\n  static empty() {\n    return []\n  }\n\n  static oneNormalSpace() {\n    return [ FmtTextTokenFactory.normalSpace() ]\n  }\n}\n\n/**\n *\n * @param {string} str\n * @returns {string}\n */\nfunction sanitizeString(str) {\n  return str.replace(/\\s+/g, ' ')\n}","/*\n *  Copyright (C) 2021 Universität zu Köln\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\n\n\n\n/*\n\nEssentially a string with some standard attributes, or some empty space\n\nFormattedTextToken := {\n    type:  glue | text\n\n    type === glue :\n       The term 'glue' is taken from Donald Knuth's the TeX book, where it is explained in\n       chapter 12. Glue is meant to represent a potentially variable-length space that may or\n       may not eventually appear in a representation of the text. It may not appear, for example, in\n       a printed version of the text if it is an inter-word space that falls at the end of the line.\n       This allows for more sophisticated typesetting in printed form.\n\n       {\n          space: a space size in pixels, if negative, defaults to a standard size defined by some typesetting engine\n          stretch: extra pixels the space can have, this is only a suggestion, the typesetter\n                   algorithm may stretch spaces more than this in extreme situations.\n          shrink: number, how many pixels less the space can have; (space - shrink) is the absolute minimum\n                  for the space\n\n       }\n\n    type ===  text :\n       {\n           text: string\n           weight:  normal, bold, semibold, light, etc\n           style: normal, italic\n           size:  dimension (pt, em, %)\n           decoration: none, underline, overline, strikethrough\n           verticalAlign:  baseline, super, sub\n           fontFamily:  string, a font name\n           fontStyle: normal, italic\n           fontVariant: normal, small-caps, etc\n           direction: 'rtl' | 'ltr'\n        }\n}\n\n\n\n */\n\n\nimport * as FmtTextTokenType from './FmtTextTokenType'\nimport * as FontStyle from './FontStyle'\nimport * as FontWeight from './FontWeight'\nimport * as VerticalAlign from './VerticalAlign'\n\nexport const DEFAULT_GLUE_SPACE = -1\n\nexport class FmtTextToken {\n\n  constructor (type = FmtTextTokenType.TEXT) {\n    this.type = type\n    switch(type) {\n      case FmtTextTokenType.TEXT:\n        this.text = ''\n        this.fontStyle = FontStyle.NORMAL\n        this.fontWeight = FontWeight.NORMAL\n        this.verticalAlign = VerticalAlign.BASELINE\n        break\n\n      case FmtTextTokenType.GLUE:\n        this.space = DEFAULT_GLUE_SPACE // i.e., default size, whatever that means for the typesetter/presenter context\n        break\n\n      default:\n        console.warn(`Unsupported type in FormattedTextToken constructor: ${type}`)\n        this.type = FmtTextTokenType.EMPTY\n    }\n  }\n\n  getPlainText() {\n    return this.type === FmtTextTokenType.GLUE ? ' ' : this.text\n  }\n\n  setText(text) {\n    this.text = text\n    return this\n  }\n\n  setFontSize(fontSize) {\n    this.fontSize = fontSize\n    return this\n  }\n\n  setItalic() {\n    this.fontStyle = FontStyle.ITALIC\n    return this\n  }\n\n  setNormalSlant() {\n    this.fontStyle = FontStyle.NORMAL\n    return this\n  }\n\n  setBold() {\n    this.fontWeight = FontWeight.BOLD\n    return this\n  }\n\n  setNormalWeight() {\n    this.fontWeight = FontWeight.NORMAL\n    return this\n  }\n\n  setLength(spaceLength) {\n    this.space = spaceLength\n    return this\n  }\n\n  setSuperScript() {\n    this.verticalAlign = VerticalAlign.SUPERSCRIPT\n    return this\n  }\n\n  setSubScript() {\n    this.verticalAlign = VerticalAlign.SUBSCRIPT\n    return this\n  }\n\n  setSmallFont() {\n    this.fontSize = 0.8\n  }\n\n}","/*\n *  Copyright (C) 2021 Universität zu Köln\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\nimport { FmtTextToken } from './FmtTextToken'\nimport * as FmtTextTokenType from './FmtTextTokenType'\n\nexport class FmtTextTokenFactory {\n\n  /**\n   *\n   * @param {string} someString\n   * @returns {FmtTextToken}\n   */\n  static normalText(someString) {\n    return (new FmtTextToken(FmtTextTokenType.TEXT)).setText(someString)\n  }\n\n  static normalSpace() {\n    return new FmtTextToken(FmtTextTokenType.GLUE)\n  }\n\n  /**\n   *\n   * @param {FmtTextToken} texToken\n   */\n  static clone(texToken) {\n    let newText = new FmtTextToken()\n    newText.type = texToken.type\n    switch(newText.type) {\n      case FmtTextTokenType.TEXT:\n        newText.text = texToken.text\n        newText.fontStyle = texToken.fontStyle\n        newText.fontWeight = texToken.fontWeight\n        newText.verticalAlign = texToken.verticalAlign\n        break\n\n      case FmtTextTokenType.GLUE:\n        newText.space = texToken.space // i.e., default size, whatever that means for the typesetter/presenter context\n        break\n\n      default:\n        console.warn(`Unsupported type in FormattedTextToken constructor: ${type}`)\n        newText.type = FmtTextTokenType.EMPTY\n    }\n    return newText\n  }\n\n  /**\n   *\n   * @param {Object} someObject\n   */\n  static buildFromObject(someObject) {\n    // console.log(`Building from object`)\n    // console.log(someObject)\n    if (someObject instanceof FmtTextToken) {\n      return this.clone(someObject)\n    }\n    if (someObject.type === undefined) {\n      throw new Error('No type in object')\n    }\n    switch(someObject.type) {\n      case FmtTextTokenType.TEXT:\n        let newToken = new FmtTextToken(FmtTextTokenType.TEXT)\n        if (someObject.text === undefined) {\n          throw new Error('No text in object')\n        }\n        newToken.setText(someObject.text)\n        let keysToCopy = ['verticalAlign', 'fontWeight', 'fontStyle']\n        keysToCopy.forEach( (key) => {\n          if (someObject[key] !== undefined) {\n            newToken[key] = someObject[key]\n          }\n        })\n        return newToken\n\n      case FmtTextTokenType.GLUE:\n        let glueToken = this.normalSpace()\n        if (someObject.space !== undefined) {\n          glueToken.space = someObject.space\n        }\n        return glueToken\n\n      default:\n        throw new Error(`Invalid type '${someObject.type}' in object`)\n    }\n  }\n}","/*\n *  Copyright (C) 2021 Universität zu Köln\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\nexport const EMPTY = 'empty'\nexport const TEXT = 'text'\nexport const GLUE = 'glue'","\n\nexport const NORMAL = ''\nexport const ITALIC = 'italic'","/*\n *  Copyright (C) 2021 Universität zu Köln\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\nexport const NORMAL = ''\nexport const BOLD = 'bold'","/*\n *  Copyright (C) 2021 Universität zu Köln\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\nexport const BASELINE = ''\nexport const SUBSCRIPT = 'sub'\nexport const SUPERSCRIPT = 'super'","/*\n *  Copyright (C) 2020 Universität zu Köln\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\n\nexport function swapElements(theArray, index1, index2) {\n  let element1 = theArray[index1]\n  theArray[index1] = theArray[index2]\n  theArray[index2] = element1\n  return theArray\n}\n\nexport function arraysAreEqual(array1, array2, comparisonFunction = function (a,b) { return a===b }, depth= 1) {\n  if (array1.length !== array2.length) {\n    return false\n  }\n  if (depth === 1) {\n    // simple element by element comparison\n    for(let i = 0; i < array1.length; i++ ) {\n      if (!comparisonFunction(array1[i], array2[i])) {\n        return false\n      }\n    }\n    return true\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (!arraysAreEqual(array1[i], array2[i], comparisonFunction, depth-1)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport function varsAreEqual(var1, var2) {\n  return JSON.stringify(var1) === JSON.stringify(var2)\n}\n\n/**\n * Returns true if both arrays have the same values\n * Only works if the arrays are composed of values that can be represented as strings\n * @param array1\n * @param array2\n */\nexport function arraysHaveTheSameValues(array1, array2) {\n  return array1.sort().join(' ') === array2.sort().join(' ')\n}\n\n\nexport function prettyPrintArray(array) {\n  return '[' + array.map( (e) => { return e.toString()}).join(', ') + ']'\n}\n\nexport function shuffleArray(array) {\n  array.sort(() => Math.random() - 0.5)\n  return array\n}\n\nexport function createSequenceArray(from, to, increment = 1) {\n  let theArray = []\n  for (let i = from; i <= to; i+=increment) {\n    theArray.push(i)\n  }\n  return theArray\n}\n\nexport function createIndexArray(size) {\n  return createSequenceArray(0, size-1, 1)\n}\n\nexport function pushArray(theArray, arrayToPush) {\n  arrayToPush.forEach( (e) => {\n    theArray.push(e)\n  })\n}\n\n/**\n *\n * @param {array} sourceArray\n * @param {any} separator\n */\nexport function joinWithArray(sourceArray, separator) {\n  let newArray = []\n  if (sourceArray.length === 0) {\n    return []\n  }\n\n  for (let i=0; i < sourceArray.length -1; i++) {\n    newArray.push(sourceArray[i])\n    newArray.push(separator)\n  }\n\n  newArray.push(sourceArray[sourceArray.length-1])\n  return newArray\n}","\n\nexport function doNothing() {}\nexport function returnEmptyString() { return ''}\n\nexport function doNothingPromise(msg = '') {\n  return new Promise( (resolve) => {\n    if (msg !== '') {\n      console.log(msg)\n    }\n    resolve()\n  })\n}\n\nexport function failPromise(msg= '', reason = 'no reason') {\n  return new Promise ( (resolve, reject) => {\n    if (msg !== '') {\n      console.log(msg)\n    }\n    reject(reason)\n  })\n}\n\nexport function wait(milliseconds) {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nimport * as ArrayUtil from '../../js/toolbox/ArrayUtil'\nwindow.ArrayUtil = ArrayUtil\n\nimport * as FunctionUtil from '../../js/toolbox/FunctionUtil'\nwindow.FunctionUtil = FunctionUtil\n\nimport { FmtTextTokenFactory } from '../../js/FmtText/FmtTextTokenFactory'\nwindow.FmtTextTokenFactory = FmtTextTokenFactory\n\nimport { FmtTextToken } from '../../js/FmtText/FmtTextToken'\nwindow.FmtTextToken = FmtTextToken\n\nimport * as FmtTextTokenType from '../../js/FmtText/FmtTextTokenType'\nwindow.FmtTextTokenType = FmtTextTokenType\n\nimport {FmtTextFactory} from '../../js/FmtText/FmtTextFactory'\nwindow.FmtTextFactory = FmtTextFactory"],"sourceRoot":""}